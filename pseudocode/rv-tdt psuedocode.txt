############################

Functions

############################

get.rv_tdt.results<-function(filepath.vcf, window.size=25, window.type = “M”){

filepath.vcf
vcf<-readVcf(filepath.vcf)
geno<-trio::get.geno.matrix
rm(vcf)

filepath.ped<-
ped<-read.table(filepath.ped)
tped<-get.tped(geno)
map<-get.map(tped)

results<-run.rv_tdt(window.sz,window.type, ped, map, tped)

}

############################
############################

Helper Functions - get.rv_tdt.results

############################

get.tped<-function(genotype){
#return tped as df
}

############################

get.map<-function(){
#return map as df
}

############################/

run.rv_tdt<-function(window.sz,window.type, ped, map, tped){
#return rv_tdt results as df

#if window.size = NULL
n.windows<-1

#else
n.snps<- nrow(map)
n.windows<- n.snps - window.size + 1
results<-as.data.frame(matrix(nrow=n.windows, n.col = 6))
colnames(results)<-c(“”,”position”)

for i in n.windows{
input.files<-get.input.files.for.window()
curr.window.result<-run.rv_tdt.on.window(input.files,param)
#add rv-tdt result to the df you generated at the start
results[I]<-curr.window()
}

return(results[I])

}

############################
############################

Helper Helper Functions - run.rv_tdt

############################

get.input.files.for.window<-function(window.sz,window.type, ped, map, tped){

#get the current window
#save the files

}

############################

run.rv_tdt.on.window<-function(input.files, param){

#run rv_tdt
#delete the files
#return results

}

############################

