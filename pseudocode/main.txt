Main

#RV-TDT should be downloaded somewhere in the package
#This can go in the RV_TDT function

######################

# cleaning

This must be done by hand. You should have a walkthrough and checklist for this in your workflow.

######################

#common variants analysis

######################
#TDTs are basically implemented already
aTDT 
gTDT

#Scan-Trio
get.scan_trio.results()

######################

#rare variants analysis

######################

#User-specified information

#filter by annotation information
annotation.information<-

filepath.vcf<-
window.size<-
window.type<-
param<-

############################################

#NOTE: These should give you DFs

vcfs.filepaths<-c()
get.rv_tdt.results(vcfs.filepaths, param)

#TODO:  this could be abstracted
# Avoid for loops :/

for (i in vcfs){
filepath.vcfs<-vcfs[I]
filepath.rv_tdt.results<-
rv_tdt.results<-get.rv_tdt.results(filepath.vcf)
write.table(rv_tdt.results, filepath.rv_tdt.results)
}

############################################

rvTDT.results<-get.rvTDT.results()
filepath.rvTDT.results<-
write.table(rv_tdt.results, filepath.rv_tdt.results)

############################################

scan_trio.results<-get.scan_trio.results()
filepath.rvTDT.results<-
write.table(rv_tdt.results, filepath.rv_tdt.results)

############################################

#graphing

############################################

#1. Read in all the results

RV-TDT.results<-read.table(rv_tdt.results, filepath.rv_tdt.results)
scan_trio_results<-read.table(rv_tdt.results, filepath.rv_tdt.results)
rvTDT.results<-read.table(rv_tdt.results, filepath.rv_tdt.results)

#2. Graph all the results using ggplot Individually, for the whole region

#3. Do a comparison graph using GViz
#i. get the number of transmitted rare variants
#ii. Use MTaubâ€™s GViz code
